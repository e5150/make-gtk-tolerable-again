diff -Naur gtk+-3.24.8.orig/gtk/a11y/gtkaccessibility.c gtk+-3.24.8/gtk/a11y/gtkaccessibility.c
--- gtk+-3.24.8.orig/gtk/a11y/gtkaccessibility.c	2019-04-10 21:30:43.000000000 +0200
+++ gtk+-3.24.8/gtk/a11y/gtkaccessibility.c	2019-04-22 09:20:42.121696690 +0200
@@ -37,7 +37,7 @@
 #include <gtk/gtktogglebutton.h>
 #include <gtk/gtkaccessible.h>
 
-#ifdef GDK_WINDOWING_X11
+#ifdef NOTDEFGDK_WINDOWING_X11
 #include <atk-bridge.h>
 #endif
 
@@ -988,7 +988,7 @@
   _gtk_accessibility_override_atk_util ();
   do_window_event_initialization ();
 
-#ifdef GDK_WINDOWING_X11
+#ifdef NOTDEFGDK_WINDOWING_X11
   atk_bridge_adaptor_init (NULL, NULL);
 #endif
 
diff -Naur gtk+-3.24.8.orig/gtk/gtkdbusgenerated.c gtk+-3.24.8/gtk/gtkdbusgenerated.c
--- gtk+-3.24.8.orig/gtk/gtkdbusgenerated.c	1970-01-01 01:00:00.000000000 +0100
+++ gtk+-3.24.8/gtk/gtkdbusgenerated.c	2019-04-22 09:21:24.709648020 +0200
@@ -0,0 +1 @@
+/* make make happy */
diff -Naur gtk+-3.24.8.orig/gtk/gtkdbusgenerated.h gtk+-3.24.8/gtk/gtkdbusgenerated.h
--- gtk+-3.24.8.orig/gtk/gtkdbusgenerated.h	1970-01-01 01:00:00.000000000 +0100
+++ gtk+-3.24.8/gtk/gtkdbusgenerated.h	2019-04-22 09:21:27.661575333 +0200
@@ -0,0 +1 @@
+/* make make happy */
diff -Naur gtk+-3.24.8.orig/gtk/gtkmountoperation.c gtk+-3.24.8/gtk/gtkmountoperation.c
--- gtk+-3.24.8.orig/gtk/gtkmountoperation.c	2019-04-10 21:30:43.000000000 +0200
+++ gtk+-3.24.8/gtk/gtkmountoperation.c	2019-04-22 09:26:33.098054339 +0200
@@ -52,6 +52,9 @@
 #include "gtksettings.h"
 #include "gtkstylecontextprivate.h"
 
+#define _GTK_MOUNT_OPERATION_HANDLER
+#define _GtkMountOperationHandler void
+
 #include <glib/gprintf.h>
 
 /**
@@ -185,23 +188,6 @@
 static void
 gtk_mount_operation_init (GtkMountOperation *operation)
 {
-  gchar *name_owner;
-
-  operation->priv = gtk_mount_operation_get_instance_private (operation);
-
-  operation->priv->handler =
-    _gtk_mount_operation_handler_proxy_new_for_bus_sync (G_BUS_TYPE_SESSION,
-                                                         G_DBUS_PROXY_FLAGS_DO_NOT_AUTO_START,
-                                                         "org.gtk.MountOperationHandler",
-                                                         "/org/gtk/MountOperationHandler",
-                                                         NULL, NULL);
-  name_owner = g_dbus_proxy_get_name_owner (G_DBUS_PROXY (operation->priv->handler));
-  if (!name_owner)
-    g_clear_object (&operation->priv->handler);
-  g_free (name_owner);
-
-  if (operation->priv->handler)
-    g_dbus_proxy_set_default_timeout (G_DBUS_PROXY (operation->priv->handler), G_MAXINT);
 }
 
 static void
@@ -288,15 +274,6 @@
 gtk_mount_operation_proxy_finish (GtkMountOperation     *op,
                                   GMountOperationResult  result)
 {
-  _gtk_mount_operation_handler_call_close (op->priv->handler, NULL, NULL, NULL);
-
-  op->priv->handler_showing = FALSE;
-  g_object_notify (G_OBJECT (op), "is-showing");
-
-  g_mount_operation_reply (G_MOUNT_OPERATION (op), result);
-
-  /* drop the reference acquired when calling the proxy method */
-  g_object_unref (op);
 }
 
 static void
@@ -744,38 +721,6 @@
                         GAsyncResult *res,
                         gpointer      user_data)
 {
-  _GtkMountOperationHandler *proxy = _GTK_MOUNT_OPERATION_HANDLER (source);
-  GMountOperation *op = user_data;
-  GMountOperationResult result;
-  GVariant *result_details;
-  GVariantIter iter;
-  const gchar *key;
-  GVariant *value;
-  GError *error = NULL;
-
-  if (!_gtk_mount_operation_handler_call_ask_password_finish (proxy,
-                                                              &result,
-                                                              &result_details,
-                                                              res,
-                                                              &error))
-    {
-      result = G_MOUNT_OPERATION_ABORTED;
-      g_warning ("Shell mount operation error: %s", error->message);
-      g_error_free (error);
-      goto out;
-    }
-
-  g_variant_iter_init (&iter, result_details);
-  while (g_variant_iter_loop (&iter, "{&sv}", &key, &value))
-    {
-      if (strcmp (key, "password") == 0)
-        g_mount_operation_set_password (op, g_variant_get_string (value, NULL));
-      else if (strcmp (key, "password_save") == 0)
-        g_mount_operation_set_password_save (op, g_variant_get_uint32 (value));
-    }
-
- out:
-  gtk_mount_operation_proxy_finish (GTK_MOUNT_OPERATION (op), result);
 }
 
 static void
@@ -784,20 +729,6 @@
                                            const char        *default_user,
                                            const char        *default_domain)
 {
-  gchar id[255];
-  g_sprintf(id, "GtkMountOperation%p", operation);
-
-  operation->priv->handler_showing = TRUE;
-  g_object_notify (G_OBJECT (operation), "is-showing");
-
-  /* keep a ref to the operation while the handler is showing */
-  g_object_ref (operation);
-
-  _gtk_mount_operation_handler_call_ask_password (operation->priv->handler, id,
-                                                  message, "drive-harddisk",
-                                                  default_user, default_domain,
-                                                  operation->priv->ask_flags, NULL,
-                                                  call_password_proxy_cb, operation);
 }
 
 static void
@@ -911,36 +842,6 @@
                         GAsyncResult *res,
                         gpointer      user_data)
 {
-  _GtkMountOperationHandler *proxy = _GTK_MOUNT_OPERATION_HANDLER (source);
-  GMountOperation *op = user_data;
-  GMountOperationResult result;
-  GVariant *result_details;
-  GVariantIter iter;
-  const gchar *key;
-  GVariant *value;
-  GError *error = NULL;
-
-  if (!_gtk_mount_operation_handler_call_ask_question_finish (proxy,
-                                                              &result,
-                                                              &result_details,
-                                                              res,
-                                                              &error))
-    {
-      result = G_MOUNT_OPERATION_ABORTED;
-      g_warning ("Shell mount operation error: %s", error->message);
-      g_error_free (error);
-      goto out;
-    }
-
-  g_variant_iter_init (&iter, result_details);
-  while (g_variant_iter_loop (&iter, "{&sv}", &key, &value))
-    {
-      if (strcmp (key, "choice") == 0)
-        g_mount_operation_set_choice (op, g_variant_get_int32 (value));
-    }
- 
- out:
-  gtk_mount_operation_proxy_finish (GTK_MOUNT_OPERATION (op), result);
 }
 
 static void
@@ -948,19 +849,6 @@
                                            const char        *message,
                                            const char        *choices[])
 {
-  gchar id[255];
-  g_sprintf(id, "GtkMountOperation%p", operation);
-
-  operation->priv->handler_showing = TRUE;
-  g_object_notify (G_OBJECT (operation), "is-showing");
-
-  /* keep a ref to the operation while the handler is showing */
-  g_object_ref (operation);
-
-  _gtk_mount_operation_handler_call_ask_question (operation->priv->handler, id,
-                                                  message, "drive-harddisk",
-                                                  choices, NULL,
-                                                  call_question_proxy_cb, operation);
 }
 
 static void
@@ -1510,42 +1398,6 @@
                         GAsyncResult *res,
                         gpointer      user_data)
 {
-  _GtkMountOperationHandler *proxy = _GTK_MOUNT_OPERATION_HANDLER (source);
-  GMountOperation *op = user_data;
-  GMountOperationResult result;
-  GVariant *result_details;
-  GVariantIter iter;
-  const gchar *key;
-  GVariant *value;
-  GError *error = NULL;
-
-  if (!_gtk_mount_operation_handler_call_show_processes_finish (proxy,
-                                                                &result,
-                                                                &result_details,
-                                                                res,
-                                                                &error))
-    {
-      result = G_MOUNT_OPERATION_ABORTED;
-      g_warning ("Shell mount operation error: %s", error->message);
-      g_error_free (error);
-      goto out;
-    }
-
-  /* If the request was unhandled it means we called the method again;
-   * in this case, just return and wait for the next response.
-   */
-  if (result == G_MOUNT_OPERATION_UNHANDLED)
-    return;
-
-  g_variant_iter_init (&iter, result_details);
-  while (g_variant_iter_loop (&iter, "{&sv}", &key, &value))
-    {
-      if (strcmp (key, "choice") == 0)
-        g_mount_operation_set_choice (op, g_variant_get_int32 (value));
-    }
-
- out:
-  gtk_mount_operation_proxy_finish (GTK_MOUNT_OPERATION (op), result);
 }
 
 static void
@@ -1554,22 +1406,6 @@
                                              GArray            *processes,
                                              const char        *choices[])
 {
-  gchar id[255];
-  g_sprintf(id, "GtkMountOperation%p", operation);
-
-  operation->priv->handler_showing = TRUE;
-  g_object_notify (G_OBJECT (operation), "is-showing");
-
-  /* keep a ref to the operation while the handler is showing */
-  g_object_ref (operation);
-
-  _gtk_mount_operation_handler_call_show_processes (operation->priv->handler, id,
-                                                    message, "drive-harddisk",
-                                                    g_variant_new_fixed_array (G_VARIANT_TYPE_INT32,
-                                                                               processes->data, processes->len,
-                                                                               sizeof (GPid)),
-                                                    choices, NULL,
-                                                    call_processes_proxy_cb, operation);
 }
 
 static void
@@ -1629,25 +1465,6 @@
 static void
 gtk_mount_operation_aborted (GMountOperation *op)
 {
-  GtkMountOperationPrivate *priv;
-
-  priv = GTK_MOUNT_OPERATION (op)->priv;
-
-  if (priv->dialog != NULL)
-    {
-      gtk_widget_destroy (GTK_WIDGET (priv->dialog));
-      priv->dialog = NULL;
-      g_object_notify (G_OBJECT (op), "is-showing");
-      g_object_unref (op);
-    }
-
-  if (priv->handler != NULL)
-    {
-      _gtk_mount_operation_handler_call_close (priv->handler, NULL, NULL, NULL);
-
-      priv->handler_showing = FALSE;
-      g_object_notify (G_OBJECT (op), "is-showing");
-    }
 }
 
 /**
